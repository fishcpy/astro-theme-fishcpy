import{c as l}from"./config.Bp9zQWjP.js";class d{constructor(){this.initialized=!1,this.config=null,this.retryCount=0,this.maxRetries=10}async init(){this.initialized||(this.config={envId:l.twikoo.envId},console.log("Initializing TwikooVisitorManager with config:",this.config),await this.waitForTwikoo(),this.updateAllVisitors(),this.initialized=!0,console.log("TwikooVisitorManager initialized successfully"))}waitForTwikoo(){return new Promise((i,o)=>{const t=()=>{typeof window<"u"&&window.twikoo?(console.log("Twikoo is available"),i()):this.retryCount<this.maxRetries?(this.retryCount++,console.log(`Waiting for Twikoo... attempt ${this.retryCount}/${this.maxRetries}`),setTimeout(t,500)):(console.error("Twikoo failed to load after maximum retries"),o(new Error("Twikoo failed to load")))};t()})}async updateAllVisitors(){const i=document.querySelectorAll('[id^="twikoo_visitors_"]');if(i.length===0){console.log("No visitor elements found");return}console.log(`Found ${i.length} visitor elements`);const o=[],t=new Map;for(const e of i){const n=this.extractUrlFromId(e.id);o.push(n),t.set(n,e)}try{const e=await this.getVisitorCounts(o);for(const[n,r]of Object.entries(e)){const s=t.get(n);s&&(s.textContent=r.toString(),console.log(`Updated ${n}: ${r} visitors`))}}catch(e){console.error("Failed to get visitor counts:",e);for(const n of i)try{const r=this.extractUrlFromId(n.id),s=await this.getSingleVisitorCount(r);n.textContent=s.toString(),console.log(`Updated ${r}: ${s} visitors (single)`)}catch(r){console.error(`Failed to update visitor count for ${n.id}:`,r),n.textContent="0"}}}extractUrlFromId(i){let o=i.replace("twikoo_visitors_","").replace(/_/g,"/");return o.startsWith("/")||(o="/"+o),o}async getVisitorCounts(i){if(!window.twikoo)throw new Error("Twikoo not available");try{const o=await fetch(this.config.envId,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({event:"COUNTER_GET",urls:i})});if(o.ok){const t=await o.json();console.log("Batch visitor counts response:",t);const e={};return Array.isArray(t)?t.forEach((n,r)=>{e[i[r]]=n.time||0}):t.data&&Array.isArray(t.data)&&t.data.forEach((n,r)=>{e[i[r]]=n.time||0}),e}}catch(o){console.error("Batch API failed:",o)}throw new Error("Batch API not available")}async getSingleVisitorCount(i){if(!window.twikoo)throw new Error("Twikoo not available");try{const o=await fetch(this.config.envId,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({event:"COUNTER_GET",url:i})});if(o.ok){const t=await o.json();if(console.log(`Single visitor count for ${i}:`,t),t.time!==void 0)return t.time;if(t.data&&t.data.time!==void 0)return t.data.time}return 0}catch(o){return console.error(`Error getting visitor count for ${i}:`,o),0}}async updateVisitorForUrl(i){const o=`twikoo_visitors_${i.replace(/[^a-zA-Z0-9]/g,"_")}`,t=document.getElementById(o);if(t)try{const e=await this.getSingleVisitorCount(i);t.textContent=e.toString()}catch(e){console.error(`Failed to update visitor count for ${i}:`,e)}}}window.twikooVisitorManager=new d;function a(){window.twikooVisitorManager&&window.twikooVisitorManager.init().catch(c=>{console.error("Failed to initialize Twikoo visitors:",c)})}document.addEventListener("DOMContentLoaded",()=>{setTimeout(a,3e3)});document.addEventListener("astro:page-load",()=>{setTimeout(a,2e3)});window.addEventListener("popstate",()=>{setTimeout(a,2e3)});
