---
import { Icon } from "astro-icon/components";
import { commentConfig } from "../config";
import I18nKey from "../i18n/i18nKey";
import { i18n } from "../i18n/translation";
import { formatDateToYYYYMMDD } from "../utils/date-utils";
import { getCategoryUrl, getTagUrl } from "../utils/url-utils";

interface Props {
	class: string;
	published: Date;
	updated?: Date;
	tags: string[];
	category: string | null;
	hideTagsForMobile?: boolean;
	hideUpdateDate?: boolean;
	url?: string;
	hideVisitorCount?: boolean;
}
const {
	published,
	updated,
	tags,
	category,
	hideTagsForMobile = false,
	hideUpdateDate = false,
	url,
	hideVisitorCount = false,
} = Astro.props;
const className = Astro.props.class;

// 生成访问量元素的ID
const generateVisitorId = (url?: string) => {
	if (!url) {
		// 如果没有传入URL，使用当前页面路径
		const currentPath = Astro.url.pathname;
		return `twikoo_visitors_${currentPath.replace(/[^a-zA-Z0-9]/g, "_")}`;
	}
	return `twikoo_visitors_${url.replace(/[^a-zA-Z0-9]/g, "_")}`;
};

const visitorId = generateVisitorId(url);
---

{commentConfig.type === "artalk" && (
<script define:vars={{ commentConfig, url: url || Astro.url.pathname }}>
  // Artalk统计数据更新函数
  function updateArtalkStats() {
    const pvElements = document.querySelectorAll('.artalk-pv-count');
    
    if (pvElements.length > 0 && commentConfig.artalk?.server) {
      const server = commentConfig.artalk.server;
      const site = commentConfig.artalk.site || 'fishcpy主题';
      const pageKey = url;
      
      // 获取统计数据
      fetch(`${server}/api/v2/stats?site_name=${encodeURIComponent(site)}&page_key=${encodeURIComponent(pageKey)}`)
        .then(response => response.json())
        .then(data => {
          console.log('Artalk stats received:', data);
          if (data.pv !== undefined) {
            pvElements.forEach(el => {
              el.textContent = data.pv;
            });
          }
        })
        .catch(error => {
          console.error('Failed to fetch Artalk stats:', error);
        });
    }
  }
  
  // 页面加载完成后更新统计
  document.addEventListener('DOMContentLoaded', () => {
    setTimeout(updateArtalkStats, 1000);
  });
  
  // 监听Artalk加载完成事件
  document.addEventListener('loadComment', () => {
    setTimeout(updateArtalkStats, 2000);
  });
</script>
)}

<div class:list={["flex flex-wrap text-neutral-500 dark:text-neutral-400 items-center gap-4 gap-x-4 gap-y-2", className]}>
    <!-- publish date -->
    <div class="flex items-center">
        <div class="meta-icon"
        >
            <Icon name="material-symbols:calendar-today-outline-rounded" class="text-xl"></Icon>
        </div>
        <span class="text-neutral-600 dark:text-neutral-400 text-sm font-medium">{formatDateToYYYYMMDD(published)}</span>
    </div>

    <!-- update date -->
    {!hideUpdateDate && updated && updated.getTime() !== published.getTime() && (
        <div class="flex items-center">
            <div class="meta-icon"
            >
                <Icon name="material-symbols:edit-calendar-outline-rounded" class="text-xl"></Icon>
            </div>
            <span class="text-neutral-600 dark:text-neutral-400 text-sm font-medium">{formatDateToYYYYMMDD(updated)}</span>
        </div>
    )}

    <!-- categories -->
    <div class="flex items-center">
        <div class="meta-icon"
        >
            <Icon name="material-symbols:book-2-outline-rounded" class="text-xl"></Icon>
        </div>
        <div class="flex flex-row flex-nowrap items-center">
            <a href={getCategoryUrl(category)} aria-label={`View all posts in the ${category} category`}
               class="link-lg transition text-neutral-600 dark:text-neutral-400 text-sm font-medium
                            hover:text-[var(--primary)] dark:hover:text-[var(--primary)] whitespace-nowrap">
                {category || i18n(I18nKey.uncategorized)}
            </a>
        </div>
    </div>

    <!-- tags -->
    <div class:list={["items-center", {"flex": !hideTagsForMobile, "hidden md:flex": hideTagsForMobile}]}>
        <div class="meta-icon"
        >
            <Icon name="material-symbols:tag-rounded" class="text-xl"></Icon>
        </div>
        <div class="flex flex-row flex-nowrap items-center">
            {(tags && tags.length > 0) && tags.map((tag, i) => (
                <div class:list={[{"hidden": i == 0}, "mx-1.5 text-[var(--meta-divider)] text-sm"]}>/</div>
                <a href={getTagUrl(tag)} aria-label={`View all posts with the ${tag.trim()} tag`}
                   class="link-lg transition text-neutral-600 dark:text-neutral-400 text-sm font-medium
                                hover:text-[var(--primary)] dark:hover:text-[var(--primary)] whitespace-nowrap">
                    {tag.trim()}
                </a>
            ))}
            {!(tags && tags.length > 0) && <div class="transition text-neutral-600 dark:text-neutral-400 text-sm font-medium">{i18n(I18nKey.noTags)}</div>}
        </div>
    </div>

    <!-- page views -->
    {!hideVisitorCount && (
        <div class="flex items-center">
            <div class="meta-icon">
                <Icon name="material-symbols:visibility-outline-rounded" class="text-xl"></Icon>
            </div>
            <span class="text-neutral-600 dark:text-neutral-400 text-sm font-medium">
                {commentConfig.type === "artalk" ? (
                    <span class="artalk-pv-count" data-page-key={url || Astro.url.pathname}>0</span>
                ) : (
                    <span id={visitorId}>0</span>
                )} 次访问
            </span>
        </div>
    )}
</div>