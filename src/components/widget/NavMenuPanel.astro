---
import { Icon } from "astro-icon/components";
import { type NavBarLink } from "../../types/config";
import { url } from "../../utils/url-utils";

interface Props {
	links: NavBarLink[];
}

const links = Astro.props.links;
---
<div id="nav-menu-panel" class:list={["float-panel float-panel-closed absolute transition-all fixed right-4 px-2 py-2"]}>
    {links.map((link, index) => (
        <div class="nav-menu-item">
            {link.children && link.children.length > 0 ? (
                <div>
                    <button class="group flex justify-between items-center py-2 pl-3 pr-1 rounded-lg gap-8 w-full
                        hover:bg-[var(--btn-plain-bg-hover)] active:bg-[var(--btn-plain-bg-active)] transition
                        nav-submenu-toggle"
                        data-submenu={`submenu-${index}`}
                    >
                        <div class="transition text-black/75 dark:text-white/75 font-bold group-hover:text-[var(--primary)] group-active:text-[var(--primary)] flex items-center">
                            {link.icon && <Icon name={link.icon} class="text-[1rem] mr-2" />}
                            {link.name}
                        </div>
                        <Icon name="material-symbols:keyboard-arrow-down-rounded"
                              class="transition text-[1.25rem] text-[var(--primary)] submenu-arrow"
                        />
                    </button>
                    <div class={`submenu submenu-${index} max-h-0 overflow-hidden transition-all duration-300`}>
                        {link.children.map((child) => (
                            <a href={child.external ? child.url : url(child.url)} 
                               target={child.external ? "_blank" : null}
                               class="group flex justify-between items-center py-2 pl-8 pr-1 rounded-lg gap-8
                                   hover:bg-[var(--btn-plain-bg-hover)] active:bg-[var(--btn-plain-bg-active)] transition
                               "
                            >
                                <div class="transition text-black/60 dark:text-white/60 font-medium group-hover:text-[var(--primary)] group-active:text-[var(--primary)] flex items-center text-sm">
                                    {child.icon && <Icon name={child.icon} class="text-[0.875rem] mr-2" />}
                                    {child.name}
                                </div>
                                {child.external && <Icon name="fa6-solid:arrow-up-right-from-square"
                                      class="transition text-[0.75rem] text-black/25 dark:text-white/25 -translate-x-1"
                                />}
                            </a>
                        ))}
                    </div>
                </div>
            ) : (
                <a href={link.external ? link.url : url(link.url)} class="group flex justify-between items-center py-2 pl-3 pr-1 rounded-lg gap-8
                    hover:bg-[var(--btn-plain-bg-hover)] active:bg-[var(--btn-plain-bg-active)] transition
                "
                   target={link.external ? "_blank" : null}
                >
                    <div class="transition text-black/75 dark:text-white/75 font-bold group-hover:text-[var(--primary)] group-active:text-[var(--primary)] flex items-center">
                        {link.icon && <Icon name={link.icon} class="text-[1rem] mr-2" />}
                        {link.name}
                    </div>
                    {!link.external && <Icon name="material-symbols:chevron-right-rounded"
                          class="transition text-[1.25rem] text-[var(--primary)]"
                    />}
                    {link.external && <Icon name="fa6-solid:arrow-up-right-from-square"
                          class="transition text-[0.75rem] text-black/25 dark:text-white/25 -translate-x-1"
                    />}
                </a>
            )}
        </div>
    ))}
</div>

<script>
function initSubmenuToggle() {
    const toggleButtons = document.querySelectorAll('.nav-submenu-toggle');
    
    toggleButtons.forEach(button => {
        button.addEventListener('click', function() {
            const submenuId = this.getAttribute('data-submenu');
            const submenu = document.querySelector(`.${submenuId}`);
            const arrow = this.querySelector('.submenu-arrow');
            
            if (submenu) {
                const isExpanded = submenu.style.maxHeight && submenu.style.maxHeight !== '0px';
                
                if (isExpanded) {
                    submenu.style.maxHeight = '0px';
                    arrow?.classList.remove('rotate-180');
                } else {
                    submenu.style.maxHeight = submenu.scrollHeight + 'px';
                    arrow?.classList.add('rotate-180');
                }
            }
        });
    });
}

initSubmenuToggle();

document.addEventListener('astro:page-load', initSubmenuToggle);
</script>
